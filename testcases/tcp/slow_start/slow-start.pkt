// SPDX-License-Identifier: MIT
// Copyright (c) 2016 Shivansh Rai
// Source: https://github.com/freebsd-net/TCP-IP-Regression-TestSuite
// Test for checking if retransmission timeout triggers
// slow start, with 10 packets outstanding.
// Receiver in this case supports SACK.
--tolerance_usecs=100000

// Create a listening TCP socket
0.000 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
0.000 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
0.000 bind(3, ..., ...) = 0
0.000 listen(3, 1) = 0

// Establish a connection
0.100 < S 0:0(0) win 65535 <mss 1000,sackOK,nop,nop,nop,wscale 7>
0.100 > S. 0:0(0) ack 1 <...>
0.100 < . 1:1(0) ack 1 win 65535
0.100 accept(3, ..., ...) = 4

0.110 %{ assert tcpi_rto == 3000000 }%

// We write 10 data segments.
0.110 write(4, ..., 10000) = 10000
0.110 > .     1:1001 (1000) ack 1
0.110 > .  1001:2001 (1000) ack 1
0.110 > .  2001:3001 (1000) ack 1
0.110 > .  3001:4001 (1000) ack 1
0.110 > .  4001:5001 (1000) ack 1
0.110 > .  5001:6001 (1000) ack 1
0.110 > .  6001:7001 (1000) ack 1
0.110 > .  7001:8001 (1000) ack 1
0.110 > .  8001:9001 (1000) ack 1
0.110 > P. 9001:10001(1000) ack 1

// Retransmission timeout occurs
// We start sending missing segments after 3 seconds.
// At this stage we cannot send multiple segments consecutively.
3.110 > .  1:1001(1000) ack 1
3.110 < .  1:1(0) ack 1001 win 65535

// After retranmitting lost packet, we then wait for an ACK.
// This time the value of rto is ~ 6 seconds.

3.110 %{ assert tcpi_rto == 6200000 }%

// We can now send 2 segments consecutively.
3.110 > .  1001:2001(1000) ack 1
3.110 > .  2001:3001(1000) ack 1

// Receiver ACKs the 2 segments.
3.110 < . 1:1(0) ack 3001 win 65535

// We can now send 3 segments consecutively.
3.110 > .  3001:4001(1000) ack 1
3.110 > .  4001:5001(1000) ack 1
3.110 > .  5001:6001(1000) ack 1

// Receiver ACKs the 3 segments.
3.110 < .   1:1(0) ack 6001 win 65535

// We can now send 4 segments consecutively.
3.110 > .  6001:7001 (1000) ack 1
3.110 > .  7001:8001 (1000) ack 1
3.110 > .  8001:9001 (1000) ack 1
3.110 > P. 9001:10001(1000) ack 1

// Receiver ACKs all the remaining segments.
3.120 < . 1:1(0) ack 10001 win 65535
